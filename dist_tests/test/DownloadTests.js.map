{"version":3,"file":"DownloadTests.js","sourceRoot":"","sources":["../../test/DownloadTests.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6BAA6B;AAC7B,iCAAiC;AAEjC,uDAA+C;AAC/C,oDAAiD;AAEjD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAG3B,IAAa,aAAa,GAA1B;IAEW,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC;IAEpE,CAAC;IAGM,YAAY;QACf,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAErE,CAAC;IAGM,gBAAgB;QACnB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,gCAAgC,CAAC,CAAC;IACjG,CAAC;IAGM,gBAAgB;QACnB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAGM,kBAAkB,CAAC,IAAI;QAC1B,MAAM,OAAO,GAAyB,IAAI,MAAM,CAAC,YAAY,EAA0B,CAAC;QACxF,OAAO,CAAC,OAAO,GAAG;YACd,gBAAgB,EAAE,CAAC;SACtB,CAAC;QACF,MAAM,OAAO,GAAG,CAAC,EAAU;YACvB,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,EAAE,CAAC;QACX,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC1B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;CACJ,CAAA;AAhCG;IADC,uBAAI,CAAC,2CAA2C,CAAC;;;;iDAIjD;AAGD;IADC,uBAAI,CAAC,8FAA8F,CAAC;;;;qDAIpG;AAGD;IADC,uBAAI,CAAC,iEAAiE,CAAC;;;;qDAIvE;AAGD;IADC,uBAAI,CAAC,gBAAgB,CAAC;;;;uDActB;AAvCQ,aAAa;IADzB,wBAAK,CAAC,gBAAgB,CAAC;GACX,aAAa,CAwCzB;AAxCY,sCAAa","sourcesContent":["import * as Chai from 'chai';\r\nimport * as Events from 'events';\r\nimport * as Http from 'http';\r\nimport { suite, test } from 'mocha-typescript';\r\nimport { Download } from '../src/utils/download';\r\n\r\nconst expect = Chai.expect;\r\n\r\n@suite('Download tests')\r\nexport class DownloadTests {\r\n    private download: Download;\r\n    public before() {\r\n        this.download = new Download('demo.sensenet.com', 'index.html');\r\n\r\n    }\r\n\r\n    @test('Shouldn\\'t have custom headers by default')\r\n    public EmptyHeaders() {\r\n        expect(Object.keys(this.download['headers']).length).to.be.eq(0);\r\n\r\n    }\r\n\r\n    @test('Should have a proper base64 encoded Basic Authorization header after setting up Authenticate')\r\n    public BasicAuthHeaders() {\r\n        this.download.Authenticate('username', 'password');\r\n        expect(this.download['headers']['Authorization']).to.be.eq('Basic dXNlcm5hbWU6cGFzc3dvcmQ=');\r\n    }\r\n\r\n    @test('Should return the file as awaitable Promise on GetAsBufferAsync')\r\n    public GetAsBufferAsync() {\r\n        const buffer = this.download.GetAsBufferAsync();\r\n        expect(buffer).to.be.an.instanceOf(Promise);\r\n    }\r\n\r\n    @test('HandleResponse')\r\n    public testHandleResponse(done) {\r\n        const httpMsg: Http.IncomingMessage = new Events.EventEmitter() as Http.IncomingMessage;\r\n        httpMsg.headers = {\r\n            'content-length': 3\r\n        };\r\n        const resolve = (bf: Buffer) => {\r\n            expect(bf.toString()).to.be.eq('aaa');\r\n            done();\r\n        };\r\n        this.download.HandleResponse(httpMsg, resolve.bind(this));\r\n        const buf = Buffer.from('aaa');\r\n        httpMsg.emit('data', buf);\r\n        httpMsg.emit('end');\r\n    }\r\n}\r\n"]}