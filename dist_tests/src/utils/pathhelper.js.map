{"version":3,"file":"pathhelper.js","sourceRoot":"","sources":["../../../src/utils/pathhelper.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAE7B;;GAEG;AACH;IAEI;;;;OAIG;IACH,YAA4B,eAAuB,EAAmB,YAAoB;QAA9D,oBAAe,GAAf,eAAe,CAAQ;QAAmB,iBAAY,GAAZ,YAAY,CAAQ;QACtF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,2BAA2B,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAC7D,CAAC;IAEF;;;;OAIG;IACI,4BAA4B,CAAC,YAAoB;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;IACzD,CAAC;IAED;;;;OAIG;IACI,yBAAyB,CAAC,YAAoB;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IACtD,CAAC;CACJ;AA/BD,gCA+BC","sourcesContent":["import * as Path from 'path';\r\n\r\n/**\r\n * Helper class for providing full paths from relative ones\r\n */\r\nexport class PathHelper {\r\n\r\n    /**\r\n     * @param PackageRootPath {string} The absolute path for the current client package directory (e.g.: c:/temp/my-package)\r\n     * @param SnClientPath {string} The absolute path for the sn-client-js package directory (e.g.: c:/temp/my-package/node_modules/sn-client-js)\r\n     * @constructs PathHelper\r\n     */\r\n    constructor(public readonly PackageRootPath: string, public readonly  SnClientPath: string) {\r\n        this.PackageRootPath = Path.normalize(this.PackageRootPath);\r\n        this.SnClientPath = Path.normalize(this.SnClientPath);\r\n        console.log(`Sn Client package path: ${this.SnClientPath}`);\r\n        console.log(`Package root path: ${this.PackageRootPath}`);\r\n     }\r\n\r\n    /**\r\n     * Returns an absolute path based on a provided relative (from the package root) one\r\n     * @param relativePath {string} A relative path to the package root e.g. './my-dir'\r\n     * @returns the absolute path (e.g.: c:/temp/my-package/my-dir)\r\n     */\r\n    public GetRelativeToPackageRootPath(relativePath: string): string {\r\n        return Path.join(this.PackageRootPath, relativePath);\r\n    }\r\n\r\n    /**\r\n     * Returns an absolute path based on a provided relative (from the sn-client-js root) one\r\n     * @param relativePath {string} A relative path to the package root e.g. './my-dir'\r\n     * @returns the absolute path (e.g.: c:/temp/my-package/node_modules/my-dir)\r\n     */\r\n    public GetRelativeToSnClientPath(relativePath: string): string {\r\n        return Path.join(this.SnClientPath, relativePath);\r\n    }\r\n}\r\n"]}