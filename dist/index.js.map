{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,oDAAoD;AACpD,6DAA6D;AAC7D,iCAAiC;AACjC,6BAA6B;AAC7B,iCAA8B;AAC9B,2DAA0D;AAC1D,+CAA4C;AAC5C,qDAAgD;AAChD,sFAAmF;AAGnF,MAAM,QAAQ,GAAG,MAAM,CAAC;AACxB,MAAM,eAAe,GAAG,aAAa,CAAC;AACtC,MAAM,QAAQ,GAAG,MAAM,CAAC;AAExB,CAAC;IACG,MAAM,yBAAW,CAAC,IAAI,EAAE,CAAC;IAEzB,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAW,CAAC,UAAU,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,MAAM,KAAK,CAAC,kHAAkH,CAAC,CAAC;IACpI,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,yBAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,KAAK,CAAC,0CAA0C,yBAAW,CAAC,UAAU,CAAC,YAAY,2DAA2D,CAAC,CAAC;IAC1J,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,yBAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,KAAK,CAAC,2CAA2C,yBAAW,CAAC,UAAU,CAAC,SAAS,2DAA2D,CAAC,CAAC;IACxJ,CAAC;IAED,MAAM,aAAa,GAAG,CAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;IAC5D,MAAM,YAAY,GAAG,iDAAuB,CAAC,iBAAiB,EAAE,CAAC;IAEjE,IAAI,CAAC;QACD,MAAM,EAAE,OAAO,EAAE,GAAG,mBAAmB,CAAC,aAAa,CAAC,CAAC;QACvD,MAAM,OAAO,GAA2B,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;YACvE,MAAM,CAAC;gBACH,IAAI,EAAE,EAAE,CAAC,SAAS;aACrB,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;QACJ,yBAAW,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAEnD,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,KAAK,QAAQ;gBACT,MAAM,uCAAmB,EAAE,CAAC;gBAC5B,KAAK,CAAC;YACV,KAAK,eAAe;gBAChB,MAAM,6BAAY,EAAE,CAAC;gBACrB,KAAK,CAAC;YACV,KAAK,QAAQ;gBACT,WAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC5B;gBACI,KAAK,CAAC;QACd,CAAC;IAEL,CAAC;IAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACb,WAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEpB,CAAC,CAAA,CAAC,EAAE,CAAC","sourcesContent":["import * as CommadLineArgs from 'command-line-args';\r\nimport * as CommandLineCommands from 'command-line-commands';\r\nimport * as FileSystem from 'fs';\r\nimport * as Path from 'path';\r\nimport { Help } from './help';\r\nimport { DoInitializeConfigs } from './initialize-config';\r\nimport { Initializer } from './initializer';\r\nimport { DoFetchTypes } from './sn-fetch-types';\r\nimport { SnConfigFieldModelStore } from './utils/snconfig/snconfigfieldmodelstore';\r\nimport { SnConfigModel } from \"./utils/snconfig/snconfigmodel\";\r\n\r\nconst CMD_INIT = 'init';\r\nconst CMD_FETCH_TYPES = 'fetch-types';\r\nconst CMD_HELP = 'help';\r\n\r\n(async () => {\r\n    await Initializer.Init();\r\n\r\n    if (!FileSystem.existsSync(Path.join(Initializer.PathHelper.PackageRootPath, 'package.json'))) {\r\n        throw Error('There is no package.json file in your working directory. Please run the tool from a root of a valid NPM package!');\r\n    }\r\n\r\n    if (!FileSystem.existsSync(Initializer.PathHelper.SnClientPath)) {\r\n        throw Error(`sn-client-js package not available at '${Initializer.PathHelper.SnClientPath}'. Please make sure it's installed before using the tool.`);\r\n    }\r\n\r\n    if (!FileSystem.existsSync(Initializer.PathHelper.SnCliPath)) {\r\n        throw Error(`sn-client-cli package not available at '${Initializer.PathHelper.SnCliPath}'. Please make sure it's installed before using the tool.`);\r\n    }\r\n\r\n    const validCommands = [CMD_INIT, CMD_FETCH_TYPES, CMD_HELP];\r\n    const validOptions = SnConfigFieldModelStore.GetCommandOptions();\r\n\r\n    try {\r\n        const { command } = CommandLineCommands(validCommands);\r\n        const options: Partial<SnConfigModel> = CommadLineArgs(validOptions.map((op) => {\r\n            return {\r\n                name: op.FieldName\r\n            };\r\n        }));\r\n        Initializer.SnConfigReader.OverrideConfig(options);\r\n\r\n        switch (command) {\r\n            case CMD_INIT:\r\n                await DoInitializeConfigs();\r\n                break;\r\n            case CMD_FETCH_TYPES:\r\n                await DoFetchTypes();\r\n                break;\r\n            case CMD_HELP:\r\n                Help.Show(validOptions);\r\n            default:\r\n                break;\r\n        }\r\n\r\n    } catch (error) {\r\n        Help.Show(validOptions);\r\n        process.exit(0);\r\n    }\r\n\r\n    process.exit(0);\r\n\r\n})();\r\n"]}